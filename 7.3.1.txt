#include <iostream>
#include <iomanip>
#include <time.h>

using namespace std;

void Create(int** a, const int rowCount, const int colCount, const int Low,
	const int High);
void Input(int** a, const int rowCount, const int colCount);
void Print(int** a, const int rowCount, const int colCount);
int Part1_Count(int** a, const int rowCount, const int colCount, int& count);
void IsMaxInRowN(int** a, const int rowCount, const int colCount, int& count1);

int main()
{
	srand((unsigned)time(NULL));
	int Low = -15;
	int High = 15;
	int rowCount, colCount;
	cout << "rowCount = "; cin >> rowCount;
	cout << "colCount = "; cin >> colCount;
	int** a = new int* [rowCount];
	for (int i = 0; i < rowCount; i++)
		a[i] = new int[colCount];
	// Create(a, rowCount, colCount, Low, High);
	Input(a, rowCount, colCount);
	Print(a, rowCount, colCount);
	int count = 0;
	int count1 = 1;
	//int max = 0;
	Part1_Count(a, colCount, rowCount, count);
	cout << "count  nules  = " << count << endl;
	//cout << "there are no zero elements" << endl;
	cout << endl;
	IsMaxInRowN(a, rowCount, colCount, count1);
	cout << "count elevents       " << count1 << endl;
	//cout << "max       " << max << endl;
	cout << endl;
	for (int i = 0; i < rowCount; i++)
		delete[] a[i];
	delete[] a;
	return 0;
}
void Create(int** a, const int rowCount, const int colCount, const int Low,
	const int High)
{
	for (int i = 0; i < rowCount; i++)
		for (int j = 0; j < colCount; j++)
			a[i][j] = Low + rand() % (High - Low + 1);
}
void Input(int** a, const int rowCount, const int colCount)
{
	for (int i = 0; i < rowCount; i++)
	{
		for (int j = 0; j < colCount; j++)
		{
			cout << "a[" << i << "][" << j << "] = ";
			cin >> a[i][j];
		}
		cout << endl;
	}
}
void Print(int** a, const int rowCount, const int colCount)
{
	cout << endl;
	for (int i = 0; i < rowCount; i++)
	{
		for (int j = 0; j < colCount; j++)
			cout << setw(4) << a[i][j];
		cout << endl;
	}
	cout << endl;
}
int Part1_Count(int** a, const int colCount, const int rowCount, int& count)
{
	for (int i = 0; i < colCount; i++)
	

		for (int j = 0; j < rowCount; j++)
		{
			if (a[j][i] == 0)
			{
				count++;
				break;
			}
		}
	
	return count;

}
void IsMaxInRowN(int** a, const int rowCount, const int colCount, int& count1)
{
	//const int k = 8;
	//int* elements = new int[k];
	//int max = elements[0]; 
	count1 = 1;
	int countmax = count1;
	for (int i = 0; i < rowCount; i++)
	{
		for (int j = 0; j < colCount; j++)
		{
			if (a[i][j] == a[i][j + 1])
			{
				count1++;
				break;

			}
			else
				cout << " ";
		}
		//cout << "count1 = " << count1 << endl;
	}
	if (count1 > countmax)
		countmax = count1;
	//cout << "countmax   " << countmax << endl;

}

